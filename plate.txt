using System;

namespace חידת_הצלחות
{
    public class Program
    {
        public static void Main(string[] args)
        {
            int maxFloor = int.Parse(Console.ReadLine());

            int answer = plateDrop(2, maxFloor);

            Console.WriteLine($"The minimum number of trials needed is {answer}.");
        }

        /* Function to get minimum number of  
    trials needed in worst case with n 
    plates and k floors */
        static int plateDrop(int n, int k)
        {

            /* A 2D table where entery plateFloor[i][j] 
            will represent minimum number of trials 
            needed for i plates and j floors. */
            int[,] plateFloor = new int[n + 1, k + 1];
            int res;
            int i, j, x;

            // We need one trial for one floor and0 
            // trials for 0 floors 
            for (i = 1; i <= n; i++)
            {
                plateFloor[i, 1] = 1;
                plateFloor[i, 0] = 0;
            }

            // We always need j trials for one plate 
            // and j floors. 
            for (j = 1; j <= k; j++)
                plateFloor[1, j] = j;

            // Fill rest of the entries in table 
            // using optimal substructure property 
            for (i = 2; i <= n; i++)
            {
                for (j = 2; j <= k; j++)
                {
                    plateFloor[i, j] = int.MaxValue;

                    for (x = 1; x <= j; x++)
                    {
                        int a = plateFloor[i - 1, x - 1];
                        int b = plateFloor[i, j - x];
                        int max = (a > b) ? a : b;
                        res = 1 + max;


                        if (res < plateFloor[i, j])
                            plateFloor[i, j] = res;
                    }
                }
            }
            // plateFloor[n][k] holds the result 
            return plateFloor[n, k];
        }
    }
}